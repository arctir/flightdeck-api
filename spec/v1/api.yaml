openapi: 3.0.0

info:
  title: Flightdeck API
  version: 1.0.0
  description: API for interacting with Flightdeck
  license:
    name: Apache-2.0
    url: https://opensource.org/license/apache-2-0

servers:
  - url: https://api.arctir.cloud/v1
  - url: /v1

paths:
  /clusters:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
        - in: query
          name: name
          schema:
            type: string
          description: Search for a Cluster by name
      summary: Retrieve a list of Clusters
      operationId: getClusters
      responses:
        "200":
          description: A list of Clusters
          content:
            application/json:
              schema:
                $ref: "./clusters.yaml#/components/schemas/ClustersListResponse"

  /clusters/{clusterId}:
    get:
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      summary: Retrieve a Cluster
      operationId: getClusterById
      responses:
        "200":
          description: The Cluster
          content:
            application/json:
              schema:
                $ref: "./clusters.yaml#/components/schemas/Cluster"
        "404":
          description: The resource was not found

  /orgs:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
        - in: query
          name: name
          schema:
            type: string
          description: Search for an Organization by name
      summary: Retrieve a list of Organizations for this user
      operationId: getOrganizations
      responses:
        "200":
          description: A list of Organizations
          content:
            application/json:
              schema:
                $ref: "./organizations.yaml#/components/schemas/OrganizationsListResponse"
    post:
      summary: Create a new Organization
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./organizations.yaml#/components/schemas/OrganizationInput"
      responses:
        "201":
          description: The newly created Organization
          content:
            application/json:
              schema:
                $ref: "./organizations.yaml#/components/schemas/Organization"

  /orgs/{orgId}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The name of the Organization to update or retrieve
    get:
      summary: Retrieve Organization by ID
      operationId: getOrganizationByID
      responses:
        "200":
          description: The requested Organization
          content:
            application/json:
              schema:
                $ref: "./organizations.yaml#/components/schemas/Organization"
        "404":
          description: The resource was not found
    put:
      summary: Update Organization by ID
      operationId: updateOrganizationByID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./organizations.yaml#/components/schemas/OrganizationInput"
      responses:
        "200":
          description: The updated organization
          content:
            application/json:
              schema:
                $ref: "./organizations.yaml#/components/schemas/Organization"
        "404":
          description: The resource was not found
    delete:
      summary: Delete Organization by ID
      operationId: deleteOrganizationByID
      responses:
        "204":
          description: Organization successfully deleted
        "404":
          description: The resource was not found

  # connections
  /orgs/{orgId}/portals/{portalName}/connections:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name pf the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of Connections
      operationId: getConnections
      responses:
        "200":
          description: A list of Connections
          content:
            application/json:
              schema:
                $ref: "./connections.yaml#/components/schemas/ConnectionsListResponse"
    post:
      summary: Create a new Connection
      operationId: createConnection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./connections.yaml#/components/schemas/ConnectionInput"
      responses:
        "201":
          description: The newly created Connection
          content:
            application/json:
              schema:
                $ref: "./connections.yaml#/components/schemas/Connection"

  /orgs/{orgId}/portals/{portalName}/connections/{name}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: The name of the Connection
    get:
      summary: Retrieve a Connection
      operationId: getConnection
      responses:
        "200":
          description: The Connection
          content:
            application/json:
              schema:
                $ref: "./connections.yaml#/components/schemas/Connection"
    put:
      summary: Update Connection
      operationId: updateConnection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./connections.yaml#/components/schemas/ConnectionInput"
      responses:
        "200":
          description: The updated Connection
          content:
            application/json:
              schema:
                $ref: "./connections.yaml#/components/schemas/Connection"
        "404":
          description: The resource was not found

    delete:
      summary: Delete Connection
      operationId: deleteConnection
      responses:
        "204":
          description: Connection successfully deleted
        "404":
          description: The resource was not found

  # images
  /versions:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
        - name: versionName
          in: query
          required: false
          schema:
            type: string
          description: Search for a Version by name
      summary: Retrieve a list of PortalVersions
      operationId: getPortalVersions
      responses:
        "200":
          description: A list of PortalVersions
          content:
            application/json:
              schema:
                $ref: "./portalversions.yaml#/components/schemas/PortalVersionsListResponse"

  /versions/{versionId}:
    parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: string
        description: The version of the PortalVersion
    get:
      summary: Retrieve a PortalVersion
      operationId: getPortalVersion
      responses:
        "200":
          description: The PortalVersion
          content:
            application/json:
              schema:
                $ref: "./portalversions.yaml#/components/schemas/PortalVersion"

  /versions/{versionId}/plugindefinitions:
    parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: string
        description: The version of the PortalVersion
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of Plugin Definitions for a PortalVersion
      operationId: getPortalVersionPluginDefinitions
      responses:
        "200":
          description: A list of PortalVersion Plugin Definitions
          content:
            application/json:
              schema:
                $ref: "./plugindefinitions.yaml#/components/schemas/PluginDefinitionsListResponse"

  /versions/{versionId}/plugindefinitions/{name}:
    parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: string
        description: The version of the PortalVersion
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: The name of the Plugin Definition
    get:
      summary: Retrieve a Plugin Definition
      operationId: getPortalVersionPluginDefinition
      responses:
        "200":
          description: The PortalVersion Plugin Definition
          content:
            application/json:
              schema:
                $ref: "./plugindefinitions.yaml#/components/schemas/PluginDefinition"

  # tenants
  /orgs/{orgId}/tenants:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organizzation
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of tenants
      operationId: getTenants
      responses:
        "200":
          description: A list of tenants
          content:
            application/json:
              schema:
                $ref: "./tenants.yaml#/components/schemas/TenantsListResponse"
    post:
      summary: Create a new tenant
      operationId: createTenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./tenants.yaml#/components/schemas/TenantInput"
      responses:
        "201":
          description: The newly created tenant
          content:
            application/json:
              schema:
                $ref: "./tenants.yaml#/components/schemas/Tenant"

  /orgs/{orgId}/tenants/{tenantName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the tenant to retrieve or update
    get:
      summary: Retrieve a tenant by name
      operationId: getTenant
      responses:
        "200":
          description: The requested tenant
          content:
            application/json:
              schema:
                $ref: "./tenants.yaml#/components/schemas/Tenant"
        "404":
          description: The resource was not found
    put:
      summary: Update a tenant by name
      operationId: updateTenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./tenants.yaml#/components/schemas/TenantInput"
      responses:
        "200":
          description: The updated tenant
          content:
            application/json:
              schema:
                $ref: "./tenants.yaml#/components/schemas/Tenant"
        "404":
          description: The resource was not found
    delete:
      summary: Delete a tenant by name
      operationId: deleteTenant
      responses:
        "204":
          description: Tenant successfully deleted
        "404":
          description: The resource was not found

  # users resources
  /orgs/{orgId}/tenants/{tenantName}/users:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the tenant
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Tenant Users
      operationId: getTenantUsers
      responses:
        "200":
          description: The Tenant Users
          content:
            application/json:
              schema:
                $ref: "./tenantusers.yaml#/components/schemas/TenantUsersListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create a TenantUser resource
      operationId: createTenantUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./tenantusers.yaml#/components/schemas/TenantUserInput"
      responses:
        "201":
          description: The newly created TenantUser
          content:
            application/json:
              schema:
                $ref: "./tenantusers.yaml#/components/schemas/TenantUser"

  /orgs/{orgId}/tenants/{tenantName}/users/{username}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the tenant
      - name: username
        in: path
        required: true
        schema:
          type: string
        description: The username of the user
    get:
      summary: Get a Tenant User
      operationId: getTenantUser
      responses:
        "200":
          description: The Tenant User
          content:
            application/json:
              schema:
                $ref: "./tenantusers.yaml#/components/schemas/TenantUser"
        "404":
          description: The resource was not found
    delete:
      summary: Delete a Tenant User
      operationId: deleteTenantUser
      responses:
        "204":
          description: Tenant User successfully deleted
        "404":
          description: The resource was not found

  # portals
  /orgs/{orgId}/portals:
    get:
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Organizzation
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of portals
      operationId: getPortals
      responses:
        "200":
          description: A list of portals
          content:
            application/json:
              schema:
                $ref: "./portals.yaml#/components/schemas/PortalsListResponse"
    post:
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Organizzation
      summary: Create a new portal
      operationId: createPortal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./portals.yaml#/components/schemas/PortalInput"
      responses:
        "201":
          description: The newly created portal
          content:
            application/json:
              schema:
                $ref: "./portals.yaml#/components/schemas/Portal"

  /orgs/{orgId}/portals/{portalName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
    get:
      summary: Retrieve a portal by name
      operationId: getPortal
      responses:
        "200":
          description: The requested portal
          content:
            application/json:
              schema:
                $ref: "./portals.yaml#/components/schemas/Portal"
        "404":
          description: The resource was not found
    put:
      summary: Update a portal by name
      operationId: updatePortal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./portals.yaml#/components/schemas/PortalInput"
      responses:
        "200":
          description: The updated portal
          content:
            application/json:
              schema:
                $ref: "./portals.yaml#/components/schemas/Portal"
        "404":
          description: The resource was not found
    delete:
      summary: Delete a portal by name
      operationId: deletePortal
      responses:
        "204":
          description: Portal successfully deleted
        "404":
          description: The resource was not found

  /orgs/{orgId}/portals/{portalName}/status:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      summary: Get Portal status
      operationId: getPortalStatus
      responses:
        "200":
          description: Current Portal Status
          content:
            application/json:
              schema:
                $ref: "./portals.yaml#/components/schemas/PortalStatus"
        "404":
          description: The resource was not found

  # catalog provider resources
  /orgs/{orgId}/portals/{portalName}/catalogproviders:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Catalog Providers
      operationId: getCatalogProviders
      responses:
        "200":
          description: List of Catalog Providers
          content:
            application/json:
              schema:
                $ref: "./catalogproviders.yaml#/components/schemas/CatalogProvidersListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create a Catalog Provider
      operationId: createCatalogProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./catalogproviders.yaml#/components/schemas/CatalogProviderInput"
      responses:
        "201":
          description: The Catalog Provider was created
          content:
            application/json:
              schema:
                $ref: "./catalogproviders.yaml#/components/schemas/CatalogProvider"
        "404":
          description: The resource was not found

  /orgs/{orgId}/portals/{portalName}/catalogproviders/{providerName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: providerName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Catalog Provider
    get:
      summary: Get a Catalog Provider
      operationId: getCatalogProvider
      responses:
        "200":
          description: The Catalog Provider
          content:
            application/json:
              schema:
                $ref: "./catalogproviders.yaml#/components/schemas/CatalogProvider"
        "404":
          description: The resource was not found
    put:
      summary: Update a Catalog Provider
      operationId: updateCatalogProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./catalogproviders.yaml#/components/schemas/CatalogProviderInput"
      responses:
        "200":
          description: The Catalog Provider was updated
          content:
            application/json:
              schema:
                $ref: "./catalogproviders.yaml#/components/schemas/CatalogProvider"
        "404":
          description: The resource was not found
    delete:
      summary: Delete a Catalog Provider
      operationId: deleteCatalogProvider
      responses:
        "204":
          description: The Catalog Provider was deleted
        "404":
          description: The resource was not found

  # integrations
  /orgs/{orgId}/portals/{portalName}/integrations:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Integrations
      operationId: getIntegrations
      responses:
        "200":
          description: List of Integrations
          content:
            application/json:
              schema:
                $ref: "./integrations.yaml#/components/schemas/IntegrationsListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create an Integration
      operationId: createIntegration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./integrations.yaml#/components/schemas/IntegrationInput"
      responses:
        "201":
          description: The Integration was created
          content:
            application/json:
              schema:
                $ref: "./integrations.yaml#/components/schemas/Integration"
        "404":
          description: The resource was not found

  /orgs/{orgId}/portals/{portalName}/integrations/{integrationName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: integrationName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Integration
    get:
      summary: Get an Integration
      operationId: getIntegration
      responses:
        "200":
          description: The Integration
          content:
            application/json:
              schema:
                $ref: "./integrations.yaml#/components/schemas/Integration"
        "404":
          description: The resource was not found
    put:
      summary: Update an Integration
      operationId: updateIntegration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./integrations.yaml#/components/schemas/IntegrationInput"
      responses:
        "200":
          description: The Integration was updated
          content:
            application/json:
              schema:
                $ref: "./integrations.yaml#/components/schemas/Integration"
        "404":
          description: The resource was not found
    delete:
      summary: Delete an Integration
      operationId: deleteIntegration
      responses:
        "204":
          description: The Integration was deleted
        "404":
          description: The resource was not found

  # identity providers
  /orgs/{orgId}/tenants/{tenantName}/identityproviders:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Tenant
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Identity Providers
      operationId: getIdentityProviders
      responses:
        "200":
          description: List of Identity Providers
          content:
            application/json:
              schema:
                $ref: "./identityproviders.yaml#/components/schemas/IdentityProvidersListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create an Identity Provider
      operationId: createIdentityProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./identityproviders.yaml#/components/schemas/IdentityProviderInput"
      responses:
        "201":
          description: The Identity Provider was created
          content:
            application/json:
              schema:
                $ref: "./identityproviders.yaml#/components/schemas/IdentityProvider"
        "404":
          description: The resource was not found

  /orgs/{orgId}/tenants/{tenantName}/identityproviders/{providerName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: providerName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Identity Provider
    get:
      summary: Get an Identity Provider
      operationId: getIdentityProvider
      responses:
        "200":
          description: The Identity Provider
          content:
            application/json:
              schema:
                $ref: "./identityproviders.yaml#/components/schemas/IdentityProvider"
        "404":
          description: The resource was not found
    put:
      summary: Update an Identity Provider
      operationId: updateIdentityProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./identityproviders.yaml#/components/schemas/IdentityProviderInput"
      responses:
        "200":
          description: The Identity Provider was updated
          content:
            application/json:
              schema:
                $ref: "./identityproviders.yaml#/components/schemas/IdentityProvider"
        "404":
          description: The resource was not found
    delete:
      summary: Delete an Identity Provider
      operationId: deleteIdentityProvider
      responses:
        "204":
          description: The Identity Provider was deleted
        "404":
          description: The resource was not found

  # proxies
  /orgs/{orgId}/portals/{portalName}/proxies:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Proxies
      operationId: getPortalProxies
      responses:
        "200":
          description: List of Portal Proxies
          content:
            application/json:
              schema:
                $ref: "./portalproxies.yaml#/components/schemas/PortalProxiesListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create a Portal Proxy
      operationId: createPortalProxy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./portalproxies.yaml#/components/schemas/PortalProxyInput"
      responses:
        "201":
          description: The Portal Proxy was created
          content:
            application/json:
              schema:
                $ref: "./portalproxies.yaml#/components/schemas/PortalProxy"
        "404":
          description: The resource was not found

  /orgs/{orgId}/portals/{portalName}/proxies/{proxyName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: proxyName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal proxy
    get:
      summary: Get a Portal Proxy
      operationId: getPortalProxy
      responses:
        "200":
          description: The Portal Proxy
          content:
            application/json:
              schema:
                $ref: "./portalproxies.yaml#/components/schemas/PortalProxy"
        "404":
          description: The resource was not found
    put:
      summary: Update a Portal Proxy
      operationId: updatePortalProxy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./portalproxies.yaml#/components/schemas/PortalProxyInput"
      responses:
        "200":
          description: The Portal Proxy was updated
          content:
            application/json:
              schema:
                $ref: "./portalproxies.yaml#/components/schemas/PortalProxy"
        "404":
          description: The resource was not found
    delete:
      summary: Delete a Portal Proxy
      operationId: deletePortalProxy
      responses:
        "204":
          description: The Portal Proxy was deleted
        "404":
          description: The resource was not found

  # pluginconfigurations
  /orgs/{orgId}/portals/{portalName}/pluginconfigurations:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of Plugin Configurations
      operationId: getPluginConfigurations
      responses:
        "200":
          description: A list of Plugin Configurations
          content:
            application/json:
              schema:
                $ref: "./pluginconfigurations.yaml#/components/schemas/PluginConfigurationsListResponse"
    post:
      summary: Create a new Plugin Configuration
      operationId: createPluginConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./pluginconfigurations.yaml#/components/schemas/PluginConfigurationInput"
      responses:
        "201":
          description: The newly created Plugin Configuration
          content:
            application/json:
              schema:
                $ref: "./pluginconfigurations.yaml#/components/schemas/PluginConfiguration"

  /orgs/{orgId}/portals/{portalName}/pluginconfigurations/{pluginName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
      - name: pluginName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Plugin
    get:
      summary: Retrieve a Plugin Configurations
      operationId: getPluginConfiguration
      responses:
        "200":
          description: A Plugin Configurations
          content:
            application/json:
              schema:
                $ref: "./pluginconfigurations.yaml#/components/schemas/PluginConfiguration"
    put:
      summary: Update a Plugin Configuration
      operationId: updatePluginConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./pluginconfigurations.yaml#/components/schemas/PluginConfigurationInput"
      responses:
        "200":
          description: The Plugin Configuation was updated
          content:
            application/json:
              schema:
                $ref: "./pluginconfigurations.yaml#/components/schemas/PluginConfiguration"
        "404":
          description: The resource was not found
    delete:
      summary: Delete a Plugin Configuration
      operationId: deletePluginConfiguration
      responses:
        "204":
          description: The Plugin Configuration was deleted
        "404":
          description: The resource was not found

  # auth providers
  /orgs/{orgId}/portals/{portalName}/authproviders:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Auth Providers
      operationId: getAuthProviders
      responses:
        "200":
          description: List of Auth Providers
          content:
            application/json:
              schema:
                $ref: "./authproviders.yaml#/components/schemas/AuthProvidersListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create an Auth Provider
      operationId: createAuthProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./authproviders.yaml#/components/schemas/AuthProviderInput"
      responses:
        "201":
          description: The Auth Provider was created
          content:
            application/json:
              schema:
                $ref: "./authproviders.yaml#/components/schemas/AuthProvider"
        "404":
          description: The resource was not found

  /orgs/{orgId}/portals/{portalName}/authproviders/{providerName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: providerName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Auth Provider
    get:
      summary: Get an Auth Provider
      operationId: getAuthProvider
      responses:
        "200":
          description: The Auth Provider
          content:
            application/json:
              schema:
                $ref: "./authproviders.yaml#/components/schemas/AuthProvider"
        "404":
          description: The resource was not found
    put:
      summary: Update an Auth Provider
      operationId: updateAuthProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./authproviders.yaml#/components/schemas/AuthProviderInput"
      responses:
        "200":
          description: The Auth Provider was updated
          content:
            application/json:
              schema:
                $ref: "./authproviders.yaml#/components/schemas/AuthProvider"
        "404":
          description: The resource was not found
    delete:
      summary: Delete an Auth Provider
      operationId: deleteAuthProvider
      responses:
        "204":
          description: The Auth Provider was deleted
        "404":
          description: The resource was not found

  # entity page layout
  /orgs/{orgId}/portals/{portalName}/entitypagelayouts:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Entity Page Layouts
      operationId: getEntityPageLayouts
      responses:
        "200":
          description: List of Entity Page Layouts
          content:
            application/json:
              schema:
                $ref: "./entitypagelayouts.yaml#/components/schemas/EntityPageLayoutsListResponse"
        "404":
          description: The resource was not found
    post:
      summary: Create an Entity Page Layout
      operationId: createEntityPageLayout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./entitypagelayouts.yaml#/components/schemas/EntityPageLayoutInput"
      responses:
        "201":
          description: The Entity Page Layout was created
          content:
            application/json:
              schema:
                $ref: "./entitypagelayouts.yaml#/components/schemas/EntityPageLayout"
        "404":
          description: The resource was not found

  /orgs/{orgId}/portals/{portalName}/entitypagelayouts/{name}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: The name of the EntityPageLayout
    get:
      summary: Get an Entity Page Layout
      operationId: getEntityPageLayout
      responses:
        "200":
          description: The Entity Page Layout
          content:
            application/json:
              schema:
                $ref: "./entitypagelayouts.yaml#/components/schemas/EntityPageLayout"
        "404":
          description: The resource was not found
    put:
      summary: Update an Entity Page Layout
      operationId: updateEntityPageLayout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./entitypagelayouts.yaml#/components/schemas/EntityPageLayoutInput"
      responses:
        "200":
          description: The Entity Page Layout was updated
          content:
            application/json:
              schema:
                $ref: "./entitypagelayouts.yaml#/components/schemas/EntityPageLayout"
        "404":
          description: The resource was not found
    delete:
      summary: Delete an Entity Page Layout
      operationId: deleteEntityPageLayout
      responses:
        "204":
          description: The Entity Page Layout was deleted
        "404":
          description: The resource was not found
